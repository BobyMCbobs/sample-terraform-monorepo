name: Terraform management
on:
  workflow_call:
    inputs:
      allowApply:
        type: boolean
        default: false
        required: false
        description: |
          when this is set to true, it will use `terraform apply -auto-approve` to apply without prompt when on main.
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - run: |
          [ -n "${{ secrets.TF_API_TOKEN }}" ] ; echo $?
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - run: |
          grep -q '${{ secrets.TF_API_TOKEN }}' $HOME/.terraformrc ; echo $?
      - name: Terraform Format
        id: format
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        if: github.event_name == 'pull_request'
        run: terraform validate -no-color
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Update Pull Request
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: "const output = `#### Terraform Format and Style \U0001F58C\\`${{ steps.format.outcome }}\\`\n#### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n#### Terraform Plan \U0001F4D6\\`${{ steps.plan.outcome }}\\`\n#### Terraform Validation \U0001F916\\`${{ steps.validate.outcome }}\\`\n<details><summary>Show Plan</summary>\n\\`\\`\\`\\n\n${process.env.PLAN}\n\\`\\`\\`\n</details>\n*Pushed by: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*\n<!-- tfmgmnt -->\n`;\ngithub.rest.issues.createComment({\n  issue_number: context.issue.number,\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: output\n})\n"
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && inputs.allowApply == true
        run: terraform apply -auto-approve -input=false
