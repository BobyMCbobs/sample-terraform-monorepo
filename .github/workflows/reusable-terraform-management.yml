name: Terraform management
on:
  workflow_call:
    inputs:
      validateOnly:
        type: boolean
        default: false
        description: |
          only check the Terrform code.
      allowApply:
        type: boolean
        default: false
        required: false
        description: |
          when this is set to true, it will use `terraform apply -auto-approve` to apply without prompt when on main.
    secrets:
      TF_API_TOKEN:
        required: true

jobs:
  tflint:
    name: tflint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@ba6bb2989f94daf58a4cc6eac2c1ca7398a678bf # v3.0.0
        name: Setup TFLint
        with:
          tflint_version: v0.44.1
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Run TFLint
        run: tflint -f compact
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: tfsec
        uses: aquasecurity/tfsec-action@b466648d6e39e7c75324f25d83891162a721f2d6 # v1.0.0
        with:
          github_token: ${{ github.token }}
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: format
        run: terraform fmt -check -diff=true -recursive
      - name: Terraform Init
        if: ${{ inputs.validateOnly != true }}
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        if: github.event_name == 'pull_request' && inputs.validateOnly != true
        run: terraform validate -no-color
        continue-on-error: true
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request' && inputs.validateOnly != true
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Update Pull Request
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        if: github.event_name == 'pull_request' && inputs.validateOnly != true
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: "const output = `#### Terraform Format and Style \U0001F58C\\`${{ steps.format.outcome }}\\`\n#### Terraform Initialization ⚙️\\`${{ steps.init.outcome }}\\`\n#### Terraform Plan \U0001F4D6\\`${{ steps.plan.outcome }}\\`\n#### Terraform Validation \U0001F916\\`${{ steps.validate.outcome }}\\`\n<details><summary>Show Plan</summary>\n\\`\\`\\`\\n\n${process.env.PLAN}\n\\`\\`\\`\n</details>\n*Pushed by: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*\n<!-- tfmgmnt -->\n`;\ngithub.rest.issues.createComment({\n  issue_number: context.issue.number,\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: output\n})\n"
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure' && inputs.validateOnly != true
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && inputs.allowApply == true && inputs.validateOnly != true
        run: terraform apply -auto-approve -input=false
